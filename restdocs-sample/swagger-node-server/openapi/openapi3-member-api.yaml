openapi: 3.0.1
info:
  title: 'My API'
  description: 'My API description'
  version: 0.1.0
servers:
  -
    url: 'http://localhost:3000'
    description: 'Sandbox server'
  -
    url: 'http://localhost:2222'
    description: 'Dev server'
tags:
  -
    name: members
    description: 'Members related resources'
paths:
  /api/members:
    get:
      tags:
        - members
      summary: 'Member 페이지 조회'
      description: "* 블라블라\n* 블라"
      operationId: member-api-test/member_page_test
      parameters:
        -
          name: size
          in: query
          description: size
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          description: page
          required: false
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema: {$ref: '#/components/schemas/PageResponse<MemberResponse>'}
              examples: {member-api-test/member_page_test: {value: "{\n  \"total_elements\" : 5,\n  \"total_pages\" : 5,\n  \"size\" : 1,\n  \"number\" : 0,\n  \"number_of_elements\" : 1,\n  \"last\" : false,\n  \"first\" : true,\n  \"empty\" : false,\n  \"content\" : [ {\n    \"id\" : 5,\n    \"email\" : \"zoo@bbb.com\",\n    \"name\" : \"zoo\",\n    \"status\" : \"NORMAL\",\n    \"address\" : null\n  } ]\n}"}}
    post:
      tags:
        - members
      summary: 'Member 생성'
      description: "* 블라블라\n* 블라"
      operationId: member-api-test/member_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberSignUpRequest'
            examples:
              member-api-test/member_create: {value: "{\n  \"email\" : \"zoo@bbb.com\",\n  \"name\" : \"zoo\",\n  \"status\" : \"NORMAL\"\n}"}
              member-api-test/member_create_글자_length_실패: {value: "{\n  \"email\" : \"asd\",\n  \"name\" : \"asd\",\n  \"status\" : \"NORMAL\"\n}"}
      responses:
        '200':
          description: '200'
        '400':
          description: '400'
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
              examples: {member-api-test/member_create_글자_length_실패: {value: "{\n  \"message\" : \" Invalid Input Value\",\n  \"status\" : 400,\n  \"code\" : \"C001\",\n  \"errors\" : [ {\n    \"field\" : \"email\",\n    \"value\" : \"asd\",\n    \"reason\" : \"must be a well-formed email address\"\n  } ],\n  \"timestamp\" : \"2023-09-24T16:22:41.329162\"\n}"}}
  '/api/members/{id}':
    get:
      tags:
        - members
      summary: 'Member 조회 - 잘못된 요청'
      description: '잘못된 ID 또는 필요한 정보가 누락된 경우에 대한 응답 예시.'
      operationId: member-api-test/member_get
      parameters:
        -
          name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema: {$ref: '#/components/schemas/MemberResponse'}
              examples: {member-api-test/member_get: {value: "{\n  \"id\" : 1,\n  \"email\" : \"yun@bbb.com\",\n  \"name\" : \"yun\",\n  \"status\" : \"BAN\",\n  \"address\" : null\n}"}}
        '400':
          description: '400'
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
              examples: {member-api-test/member_get_bad_request: {value: "{\n  \"message\" : \" Invalid Input Value\",\n  \"status\" : 400,\n  \"code\" : \"C001\",\n  \"errors\" : [ ],\n  \"timestamp\" : \"2023-09-24T16:22:41.478692\"\n}"}}
components:
  schemas:
    PageResponse<MemberResponse>:
      title: PageResponse<MemberResponse>
      required:
        - content
        - empty
        - first
        - last
        - number
        - number_of_elements
        - size
        - total_elements
        - total_pages
      type: object
      properties:
        number:
          type: number
          description: number
        last:
          type: boolean
          description: last
        size:
          type: number
          description: size
        total_elements:
          type: number
          description: total_elements
        total_pages:
          type: number
          description: total_pages
        number_of_elements:
          type: number
          description: number_of_elements
        content:
          type: array
          description: content
          items:
            required:
              - email
              - id
              - name
              - status
            type: object
            properties:
              address: {type: string, description: address}
              name: {maxLength: 50, minLength: 1, type: string, description: asd}
              id: {type: number, description: ID}
              email: {maxLength: 50, minLength: 1, type: string, description: email}
              status: {type: string, description: status, enum: [LOCK, NORMAL, BAN]}
        first:
          type: boolean
          description: first
        empty:
          type: boolean
          description: empty
    ErrorResponse:
      title: ErrorResponse
      required:
        - code
        - errors
        - message
        - status
        - timestamp
      type: object
      properties:
        code:
          minLength: 1
          type: string
          description: 'Error Code'
        message:
          minLength: 1
          type: string
          description: 'Error Message'
        errors:
          type: array
          description: 'Error Array'
          items:
            required:
              - field
              - reason
              - value
            type: object
            properties:
              reason: {minLength: 1, type: string, description: 'Error reason'}
              field: {minLength: 1, type: string, description: 'Error field'}
              value: {minLength: 1, type: string, description: 'Error value'}
        timestamp:
          minLength: 1
          type: string
          description: 'Error Timestamp'
        status:
          type: number
          description: 'HTTP Status Code'
    MemberResponse:
      title: MemberResponse
      required:
        - email
        - id
        - name
        - status
      type: object
      properties:
        address:
          type: string
          description: address
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: asd
        id:
          type: number
          description: ID
        email:
          maxLength: 50
          minLength: 1
          type: string
          description: email
        status:
          type: string
          description: status
          enum:
            - LOCK
            - NORMAL
            - BAN
    MemberSignUpRequest:
      title: MemberSignUpRequest
      required:
        - email
        - name
        - status
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: asd
        email:
          maxLength: 50
          minLength: 1
          type: string
          description: email
        status:
          type: string
          description: status
          enum:
            - LOCK
            - NORMAL
            - BAN
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-request-service
